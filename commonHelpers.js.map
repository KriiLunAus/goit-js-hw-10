{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector(\"button\");\nconst days = document.getElementById(\"days\");\nconst hours = document.getElementById(\"hours\");\nconst minutes = document.getElementById(\"minutes\");\nconst seconds = document.getElementById(\"seconds\");\n\n\nlet userDate;\nlet timeInMs;\nlet zero;\nlet timerReload;\n\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose: dateSelection,\n})\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction dateSelection(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n            startBtn.disabled = true;\n\n      iziToast.warning({\n        message: 'Please choose a date in the future',\n        theme: 'dark',\n        position: 'topRight',\n        backgroundColor: 'red'\n      })\n            return \n        } else {\n            startBtn.disabled = false;\n            userDate = selectedDates[0];\n    }\n    \n    \n    \n    \n  }\n\nfunction addLeadingZero(value) {\n  \n    return value.toString().padStart(2, '0');\n    \n  }\n\n\nstartBtn.addEventListener(\"click\", () => {\n  timerReload = setInterval(() => {\n    timeInMs = userDate - Date.now();  \n\n    if (timeInMs < 0) {\n      clearInterval(timerReload)\n      return\n    }\n\n    zero = convertMs(timeInMs);\n    \n\n    console.log(timeInMs)\n    days.textContent = addLeadingZero(zero.days);\n    hours.textContent = addLeadingZero(zero.hours);\n    minutes.textContent = addLeadingZero(zero.minutes);\n    seconds.textContent = addLeadingZero(zero.seconds);\n\n\n  }, 1000);\n\n  const input = document.getElementById('datetime-picker');\n  input.disabled = true;\n  startBtn.disabled = true;\n\n} )\n\n\n\n\n\n\n"],"names":["startBtn","days","hours","minutes","seconds","userDate","timeInMs","zero","timerReload","flatpickr","dateSelection","convertMs","ms","selectedDates","iziToast","addLeadingZero","value","input"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAO,SAAS,eAAe,MAAM,EACrCC,EAAQ,SAAS,eAAe,OAAO,EACvCC,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAU,SAAS,eAAe,SAAS,EAGjD,IAAIC,EACAC,EACAC,EACAC,EAEJC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASC,CACb,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAC1BV,EAAQ,KAAK,MAAOU,EAAK,MAAO,IAAI,EACpCT,EAAU,KAAK,MAAQS,EAAK,MAAO,KAAQ,GAAM,EACjDR,EAAU,KAAK,MAASQ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASM,EAAcG,EAAe,CAClC,GAAIA,EAAc,CAAC,GAAK,IAAI,KAAQ,CAC5Bb,EAAS,SAAW,GAE1Bc,EAAS,QAAQ,CACf,QAAS,qCACT,MAAO,OACP,SAAU,WACV,gBAAiB,KACzB,CAAO,EACK,MACZ,MACYd,EAAS,SAAW,GACpBK,EAAWQ,EAAc,CAAC,CAMnC,CAEH,SAASE,EAAeC,EAAO,CAE3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAExC,CAGHhB,EAAS,iBAAiB,QAAS,IAAM,CACvCQ,EAAc,YAAY,IAAM,CAG9B,GAFAF,EAAWD,EAAW,KAAK,MAEvBC,EAAW,EAAG,CAChB,cAAcE,CAAW,EACzB,MACD,CAEDD,EAAOI,EAAUL,CAAQ,EAGzB,QAAQ,IAAIA,CAAQ,EACpBL,EAAK,YAAcc,EAAeR,EAAK,IAAI,EAC3CL,EAAM,YAAca,EAAeR,EAAK,KAAK,EAC7CJ,EAAQ,YAAcY,EAAeR,EAAK,OAAO,EACjDH,EAAQ,YAAcW,EAAeR,EAAK,OAAO,CAGlD,EAAE,GAAI,EAEP,MAAMU,EAAQ,SAAS,eAAe,iBAAiB,EACvDA,EAAM,SAAW,GACjBjB,EAAS,SAAW,EAEtB,CAAC"}